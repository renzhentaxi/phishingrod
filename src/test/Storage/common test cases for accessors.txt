General test cases


a. Entity get(int id) methods
    1. test returns entity if entity exist
    2. test that if no such entity exist in the database, EntityDoesNotExist exception should be thrown

b. Entity add(object) methods
    1. entity is successfully added to the database. (use get to retrieve it and test)
    2. if entity already exist in database(unique key constraint violation) throws entityAlreadyExistException
c. void update(Entity)
    1. if entity exists in database and there are no unique key constraint violation -> updates entity
    2. if entity does not exist -> rows updated = 0 -> throws EntityDoesNotExistException
    3. if enity exists but modification causes unique key constraint violation -> throw EntityUpdateException
d. getByAlternativeKey
    1. test that returns entity if entity exist
    2. test that throws error if entity does not exist.
Node:
    since a1 and b1 are equivalent. you can write just one test to cover both cases.
    I recommend use get  test instead of add Test.

recommended tests:

add_entityExist_throwsEntityAlreadyExistException()

get_entityExist_returnsEntity()
get_entityDoesNotExist_throwsEntityDoesNotExistException()

getByAlternativeKey_entityExist_returnsEntity()
getByAlternativeKey_entityDoesNotExist_throwsEntityDoesNotExistException

update_entityDoesNotExist_throwsEntityDoesNotExistException()
update_entityExist_updatesEntity()
update_anotherEntityWithSameAlternativeKeyExist_throwsEntityUpdateException();
update_newAlternativeKeyMatchesWithAnOtherAlternativeKey_throwsEntityUpdateException();
? valid?
add_entityDoesNotExist_returnedEntityIsValid();